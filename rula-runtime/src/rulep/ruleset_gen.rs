use std::env;
use std::fs;
use std::io::Write;
use std::process::Command;

use super::ruleset::RuleSet;
use rula::parser::ast::RuleExpr;

pub fn generate_ruleset(rule: RuleExpr) {
    // generate ruleset from rule_expr
    let rule_name = *rule.name;
}

// Helper function to generate
pub fn generate_file(program: RuleSet, file_name: &str) {
    let mut file_path = env::current_dir().unwrap();
    file_path.push("tests");
    file_path.push("generated");
    file_path.push(file_name);
    let mut file = fs::File::create(file_path.clone()).unwrap();
    // writeln!(file, "// This is autogenerated Rust program \n{}", program).unwrap();
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_make_json() {
        // let ruleset = generate_ruleset();
    }
}
